VIM Code Navigation
=======================
1) CTAGS: - 
    $ctags -R
    => If this command is run at root directory then it created a navigation
    file "tags", which provides very flexible navigation.
    Also we can run 
    ctags -R *
  
    a) vim -t "tag"
    Example: - $vim -t title
    => It searches for a specific tag and open the output in Vim to its definition.
    
    Instead of above commmand we can also open any Linux source file in Vim and can use the 
    following basic commands:
 
    Ctrl + ] => Jump to the tag underneath the cursor
    
    Ctrl-t => Jump back up in the tag stack

    :ts <tag> <RET> => Search for a particular tag

    :tn => Go to the next definition for the last tag

    :tp => Go to the previous definition for the last tag

    :ts => List all of the definitions of the last tag

    The tn and tp commands can be used to scroll through them, and the ts command can be used
    to "search" a list for the definition we want.
    
    We can also search a tag by tagname.
    Type as below in vim editor in command mode: -
    :tag <tag name>
    
    Example: -
    :tag my_spi
    
2) Vim and ctags: -
    We can configure vim editor so that it can work for browsing code, even if a source file
    is away from the directory from where it was created. For this we modify vimrc file.
    We have to add location of tags file in vimrc.
    
    sudo vim ~/.vimrc
    set tags+=$HOME/path/of/tags/file
    
3) Code navigation by Bookmark: -
    
    m[a-zA-Z]   => set a new mark
  
    '<mark>	 => jump to start of line of specified mark
    
    `<mark>	 => jump to column and line of specified mark
    
    :marks	 => list all marks
    
    :delmarks <marks>	=> delete specified marks
    
    `.	 => jump to position where last change occured
    
    ``	 => jump to last exited buffer
    
    '' and `` 	=> jump back (jump taken using marks)
    
4) go to file command "gf": -
    The following commands open the file under the cursor: -
    
    gf    => open in the same window ("goto file")
    
    ctrl+w gf   => open in a new tab
    
    ctrl+w f    => open in a new window
    
5)  vim file navigation: -
    Suppose our file is deep down in the folder hierarchy, we don't want to type in full path
    and of course, we want to open it fast. For this there is " :e " command.
    
    Press :e **/<file name initials> and press <TAB> to let Vim search for all files starting 
    with given initials and prepare a list of choices for us. We can cycle through the list using
    <TAB> and <enter> to select a file to edit.
    
    Example: 
    $vim <-|
    In command mode run: -
    :e **/spi-omap2
    then hit "TAB" key. Now it will let us choose files starting with name spi-omap2. If we press TAB
    key again then it will let us iterate through all files starting with initial "spi-omap2" and by 
    pressing ENTER key it will let us select a file.
    
    Summary: -
    
    :e **/file-name-initials	=> searches for file name recursively from current directory
    :e /dir1/dir2/**/file-name-initials	  => same as above, but searches inside /dir1/dir2/
    
6)   Find current file name in VIM:-
     There are two ways for this: -
     a. Command 1:-
     : f <-|
     
     b. Command 1:-
     ctrl + g
     
     
    
    
    
    
    
    
    
    
   
   
